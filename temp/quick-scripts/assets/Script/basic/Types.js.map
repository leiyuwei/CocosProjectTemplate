{"version":3,"sources":["Types.ts"],"names":[],"mappings":";;;;;AAEa,QAAA,IAAI,GAAG,aAAa,CAAA;AAYjC,gBAA+B,GAAO,EAAE,GAAO;IAC3C,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;AACjC,CAAC;AAFD,wBAEC","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\basic","sourcesContent":["// () in Haskell, Unit in Purescript\r\nexport type Unit = \"Symbol_Unit\"\r\nexport const unit = \"Symbol_Unit\"\r\n\r\nexport type Effect<T> = () => T;\r\n\r\n// 函数类型\r\nexport type Fn<F1, F2> =  (_: F1) => F2\r\nexport type Fn2<F1, F2, F3> =  (_1: F1, _2: F2) => F3\r\nexport type Fn3<F1, F2, F3, F4> =  (_1: F1, _2: F2, _3: F3) => F4\r\nexport type Fn4<F1, F2, F3, F4, F5> =  (_1: F1, _2: F2, _3: F3, _4: F4) => F5\r\nexport type Fn5<F1, F2, F3, F4, F5, F6> =  (_1: F1, _2: F2, _3: F3, _4: F4, _5: F5) => F6\r\n\r\nexport type Pair<F1, F2> = { fst: F1, snd: F2 };\r\nexport function mkPair<F1, F2>(fst: F1, snd: F2): Pair<F1, F2> {\r\n    return { fst: fst, snd: snd }\r\n}"]}