{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\basic/assets\\script\\basic\\Stack.ts"],"names":[],"mappings":";;;;;AAAA,iCAAgC;AAChC,+BAA2C;AAE3C,iCAAgC;AAEhC;IAAA;QACY,WAAM,GAAa,EAAE,CAAC;IA+BlC,CAAC;IA9BG,mBAAG,GAAH;QACI,OAAO,IAAI,aAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,mBAAG,GAAH;QACI,OAAO,IAAI,aAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;IACxC,CAAC;IAED,oBAAI,GAAJ;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAC9B,CAAC;IAED,oBAAI,GAAJ,UAAM,KAAQ;QACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,sBAAM,GAAN,UAAO,KAAQ,EAAE,EAAsB;QACnC,IAAI,KAAK,GAAG,iBAAS,CAAC,UAAA,CAAC,IAAI,OAAA,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,EAAZ,CAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;YACb,IAAI,CAAC,MAAM,GAAG,aAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;SAC9C;IACL,CAAC;IAED,qBAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,uBAAO,GAAP;QACI,OAAO,eAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IACL,YAAC;AAAD,CAhCA,AAgCC,IAAA","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\basic","sourcesContent":["import { Maybe } from \"./Maybe\";\r\nimport { reverse, findIndex } from \"ramda\";\r\nimport { Fn2 } from \"./Types\";\r\nimport { erase } from \"./Array\";\r\n\r\nexport default class Stack<T> {\r\n    private _stack: Array<T> = [];\r\n    top (): Maybe<T> {\r\n        return new Maybe(this._stack[this._stack.length - 1]);\r\n    }\r\n\r\n    pop (): Maybe<T> {\r\n        return new Maybe(this._stack.pop());\r\n    }\r\n\r\n    size (): number {\r\n        return this._stack.length;\r\n    }\r\n\r\n    push (value: T): void {\r\n        this._stack.push(value);\r\n    }\r\n\r\n    remove(value: T, eq: Fn2<T, T, boolean>) {\r\n        let index = findIndex(x => eq(x, value), this._stack);\r\n        if (index != -1) {\r\n            this._stack = erase(this._stack, index, 1);\r\n        }\r\n    }\r\n\r\n    clear (): void {\r\n        this._stack = [];\r\n    }\r\n\r\n    asArray(): Array<T> {\r\n        return reverse(this._stack);\r\n    }\r\n}"]}