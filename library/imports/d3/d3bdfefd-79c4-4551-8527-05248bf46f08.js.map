{"version":3,"sources":["../../../../../assets/Script/basic/assets/Script/basic/BaseComponent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEA,yCAAwC;AACxC,yCAAwC;AAKxC;IAAkF,iCAAY;IAA9F;;IAmDA,CAAC;IA9CG,6BAAK,GAAL,UAAS,SAAuB;QAC5B,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,kCAAU,GAAV,UAAW,IAAa,EAAE,MAAc;QAAxC,iBAEC;QADG,IAAI,CAAC,EAAE,CAAC,qBAAS,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAED,wCAAgB,GAAhB,UAAiB,IAAa,EAAE,IAAoB;QAApD,iBAOC;QANG,IAAI,CAAC,EAAE,CAAC,qBAAS,EAAE;YACf,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;YACpB,IAAI,MAAM,EAAE;gBACR,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;aACpB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAqB,GAArB,UAAsB,IAAa,EAAE,IAA2B;QAAhE,iBAOC;QANG,IAAI,CAAC,EAAE,CAAC,qBAAS,EAAE;YACf,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;YACpB,IAAI,MAAM,CAAC,KAAK,EAAE;gBACd,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;aACxB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAgB,GAAhB,UAAiB,IAAa,EAAE,MAAoB;QAChD,IAAI,CAAC,EAAE,CAAC,qBAAS,EAAE,cAAM,OAAA,qBAAS,CAAC,WAAW,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,EAA9C,CAA8C,CAAC,CAAC;IAC7E,CAAC;IAED,8CAAsB,GAAtB,UAAuB,IAAa,EAAE,IAAoB;QACtD,IAAI,CAAC,EAAE,CAAC,qBAAS,EAAE;YACf,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;YACpB,IAAI,MAAM,EAAE;gBACR,qBAAS,CAAC,WAAW,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;aACjD;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACH,gCAAQ,GAAR,UAAS,MAAoB;QACzB,qBAAS,CAAC,WAAW,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IACL,oBAAC;AAAD,CAnDA,AAmDC,CAnDiF,EAAE,CAAC,SAAS,GAmD7F;AAnDqB,sCAAa","file":"","sourceRoot":"../../../../../assets/Script/basic","sourcesContent":["import { Component } from \"./Component\";\nimport { Fn, Type, Effect, Unit } from \"./Types\";\nimport { TOUCH_END } from \"./Constants\";\nimport { GlobalEnv } from \"./GlobalEnv\";\nimport { GlobalAction } from \"../core/GlobalAction\";\nimport { Maybe } from \"./Maybe\";\n\n\nexport abstract class BaseComponent<State, Action extends Type<any, any>> extends cc.Component implements Component<State, Action> {\n    state: State;\n\n    abstract eval (action: Action): void;\n\n    query<T>(extractor: Fn<State, T>) {\n        return extractor(this.state);\n    }\n\n    onTouchEnd(node: cc.Node, action: Action) {\n        node.on(TOUCH_END, () => this.eval(action));\n    }\n\n    onTouchEndEffect(node: cc.Node, func: Effect<Action>) {\n        node.on(TOUCH_END, () => {\n            let action = func();\n            if (action) {\n                this.eval(action)\n            }\n        });\n    }\n\n    onTouchEndEffectMaybe(node: cc.Node, func: Effect<Maybe<Action>>) {\n        node.on(TOUCH_END, () => {\n            let action = func();\n            if (action.valid) {\n                this.eval(action.val)\n            }\n        });\n    }\n\n    onTouchEndGlobal(node: cc.Node, action: GlobalAction) {\n        node.on(TOUCH_END, () => GlobalEnv.getInstance().dispatchAction(action));\n    }\n\n    onTouchEndGlobalEffect(node: cc.Node, func: Effect<Action>) {\n        node.on(TOUCH_END, () => {\n            let action = func();\n            if (action) {\n                GlobalEnv.getInstance().dispatchAction(action)\n            }\n        });\n    }\n\n    /**\n     * 向全局发射事件，关心此事件的地方\n     * 可以filter指定事件名字，然后监听\n     */\n    dispatch(action: GlobalAction) {\n        GlobalEnv.getInstance().dispatchAction(action);\n    }\n}\n"]}